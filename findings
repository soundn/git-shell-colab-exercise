<<<<<<< HEAD
# git-shell-colab-exercise

What is Git, and why is it used?



Why it is used: Open source and popularity, Code integrity, Collaboration, Version History, Branching/experimentation
and, Backup and security.



What is the difference between Git and GitHub?






How do you initialize a Git repository?






What is a Git commit, and how do you create one?




How to create a Git commit: You have to add your changes by adding the file to the staging area using the command "git add filename" then you create the commit using the "git commit" command.



What is the purpose of git add?





What is the difference between git pull and git fetch?





What is a branch in Git?





How do you create a new branch in Git?






How do you merge one branch into another?





How do you view the commit history in Git?






# Advanced Questions on Git

What is the purpose of git rebase, and how does it differ from git merge?



How does Git's cherry-pick command work?






 What is the significance of Git's staging area, and how can you view it?


<<<<<<<< HEAD:findings

Answer: This is where files or updates that are about to be committed are kept.
you can view the staging area by using the "git status" command.



========
>>>>>>>> main:README.md
What are Git hooks, and how can you use them?


Answer: Git hooks are scripts that Git automatically executes before or afyer certain events in the Git lifecycle, such as making commits, pushing changes, or merging branches.
These hooks are used to enforce policies, automate workflow, and enhance the overall Git experience by allowing you to run custom scripts during key stages of Git process.
Common uses of Git hooks include: Generating documentation, Enforcing coding standard, Running test, sending notifications and preventing bad commits.





How can you resolve conflicts in Git during a merge or rebase?




Answer:
=======
here we srite the solutions to our question 
>>>>>>> main
